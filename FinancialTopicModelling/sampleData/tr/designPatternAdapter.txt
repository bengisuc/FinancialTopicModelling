Design Patterns-6 (Adapter)
Structural Patterns

Bundan önceki yazılarımızda Creational Patterns bölümünde nesne oluşturma olayları ile ilgili tasarım örüntülerini incelemiştik.

Structural Patterns, Creational Patterns’den farklı olarak nesnelerinin üretimi ile değil nesnelerin birbirleri ile yapısal olarak nasıl birleşecekleri üzerine durur.

Bu örüntüler Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy
Adapter Pattern

Gerçek hayatta karşılığı olan bir tasarım örüntüsüdür. Farklı girişleri(interface) ler uyum sağlayabilmek için Adaptörler kullanılır. Örneğin bir tarafta Integer olan veri diger tarafta Hexedecimal formatta isteniyorsa Adapter bu dönüşümü sizin için yaparak iki farklı cihazın birlikte çalışmasını sağlar.

Yazılımda da benzer durumlar geçerlidir. Farklı interface uyum sağlamak için sınıfınızı saracak Adapter sınıflara ihtiyaç duyarsınız.

Yukarıdaki adaptör örneğimizde gerçek hayattaki bir örnekten yola çıkarılarak oluşturulmuş bir örnek. Duvardan aldığınız elektrik ülkelere göre değişiklik gösterir. http://www.worldstandards.eu/electricity/plug-voltage-by-country/ adresinden de bu durumu görebilirsiniz. Elimizde 240V ve 120V elektrik veren prizler olsun. Bu prizlerden cep telefonlarımızı sarj etmek için kullandığımız telefon sarj ediciler aslında 120/240 V → 3V dönüştürü adaptörlerdir.

Aşağıdaki kodda 120V üreten bir Socketimiz olsun.

SocketAdapter bize bunun çıktıyı 120, 12 ve 3 volt olacak şekilde verir.

2 tip Adapter nesnesi oluşturma tipi vardır. Birincisi Socket sınıfından extend edilerek oluşturulan Adapter’dır. Buna Class Adapter Implementation denir.

2nciside Object Adapter Implementation Socket sınıfından extend etmek yerine bu nesneyi içerisinde tutarak Adapter işlemini gerçekleştirir.
JDK Adapter Pattern Örnekleri

    java.util.Arrays#asList()
    java.io.InputStreamReader(InputStream) (returns a Reader)
    java.io.OutputStreamWriter(OutputStream) (returns a Writer)

Android Adapter Pattern Örnekleri

Örneğin Android’de ListView’lerin kullandığı ArrayAdapter sınıfıda Adapter örüntüsünü kullanır. Amacı Veri Modeli ile Arayüz arasında bağlantıyı sağlayabilmektir.
Swing Adapter İsimli Sınıflar Adapter Pattern Örneği Değildir.

Java Swing içerisinde de bir çok adapter isminde sınıf yer almaktadır. Ama bunlar Adapter pattern’i için uygun değildir. Amacı interface’de yer alan bütün metodları implement etmeden sadece ihtiyacınız olan fonksiyonu kullanabilmeniz için oluşturulan abstract sınıflardır.