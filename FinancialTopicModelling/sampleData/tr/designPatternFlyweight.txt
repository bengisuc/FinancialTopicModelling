Design Patterns-11 (Flyweight)

Adından anlaşılacağı gibi nesnenin ağırlığını bellekte kapladığı alanı azaltmak kullanılan bir örüntüdür.

Sınıfın içerisinde hep aynı değerleri alan değişkenleri bir veri yapısı haline getirip ortak(shared) olarak cache’den kullanmasını sağlatan bir örüntüdür.

Üretilecek sınıf sayısı bir veya iki tane oldugunda bu örüntüyü kullanmak anlamlı degildir. Milyonlarca ayni sınıftan oluşturuyorsak bellek önemli olmaya başlar ve bu durumu performanslı çalıştırabilmek için bu örüntü kullanılabilir.

ASD’nin Metamorphosis Scene Demosunu izlediğimizde bir sürü karınca ve böceğin aynı anda hareket ettiğini görebiliriz. Aşağıdaki alanlardan ortak alanları shared bir yapıda tutarak bellek kullanımını azaltabiliriz.

Ortak Alanlar:

    boyut
    renk
    hız

Ortak Olmayan Alanlar

    konum

Buradaki bir sürü karınca ve böceği nasıl oluşturulduğunu görebilirsiniz. Factory makeInsect dediğimiz zaman örneğin karınca oluşturulurken konum alanı dışındaki tüm özellikler HashMap<String, Insect> shared alanından çekilerek kullanılabilir. Bu durumda sizin bellekten kullanacağınız alan sadece konum için olan float x ve y alanı olacaktır.